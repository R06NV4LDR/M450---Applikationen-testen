name: Backend test, build and coverage
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always
jobs:
  test-and-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./ReactRustTodo/backend
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --workspace --all-features
      - run: cargo build --workspace --all-features --release
      
  coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./ReactRustTodo/backend
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with: { components: llvm-tools-preview }
    - run: cargo install cargo-llvm-cov
    - run: mkdir -p coverage
    - run: |
        cargo llvm-cov --workspace --all-features \
          --ignore-filename-regex '(.cargo/|tests/|examples/|target/|build.rs|main.rs|todo.rs|mysql_repo.rs|schema.rs)' \
          --lcov --output-path coverage/lcov.info
    - uses: codecov/codecov-action@v4
      with:
        files: coverage/lcov.info
        flags: backend
        name: backend-coverage
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}


  # docs-and-coverage-site:
  #   permissions:
  #     contents: read
  #     pages: write
  #     id-token: write
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: ./ReactRustTodo/backend
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Rust
  #       uses: dtolnay/rust-toolchain@stable
  #       with: { components: llvm-tools-preview }
  #     - name: Install cargo-llvm-cov
  #       run: cargo install cargo-llvm-cov
  #     - name: Generate Rust documentation
  #       run: cargo doc --no-deps --workspace --all-features
  #     - name: Generate HTML coverage report
  #       run: cargo llvm-cov --workspace --all-features --ignore-filename-regex '(.cargo/|tests/|examples/|target/|build.rs|main.rs|todo.rs|mysql_repo.rs|schema.rs)' --html
  #     - name: Prepare site structure
  #       run: |
  #         mkdir -p ../../site
  #         cp -r target/doc ../../site/docs
  #         cp -r target/llvm-cov/html ../../site/coverage
  #         cat > ../../site/index.html << 'EOF'
  #         <!DOCTYPE html>
  #         <html>
  #         <head>
  #             <title>Backend Documentation & Coverage</title>
  #             <style>
  #                 body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }
  #                 h1 { color: #333; }
  #                 .links { margin-top: 30px; }
  #                 .link-box { padding: 20px; margin: 10px 0; border: 1px solid #ddd; border-radius: 5px; }
  #                 .link-box:hover { background-color: #f5f5f5; }
  #                 a { color: #0066cc; text-decoration: none; font-size: 18px; }
  #                 a:hover { text-decoration: underline; }
  #             </style>
  #         </head>
  #         <body>
  #             <h1>Backend Documentation & Coverage</h1>
  #             <div class="links">
  #                 <div class="link-box">
  #                     <a href="docs/">Rust Documentation</a>
  #                     <p>API documentation for all backend crates</p>
  #                 </div>
  #                 <div class="link-box">
  #                     <a href="coverage/">Code Coverage Report</a>
  #                     <p>HTML coverage report generated by cargo-llvm-cov</p>
  #                 </div>
  #             </div>
  #         </body>
  #         </html>
  #         EOF
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v5
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v3
  #       with:
  #         path: "site"
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
